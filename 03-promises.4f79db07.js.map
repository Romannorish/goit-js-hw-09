{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAyBnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCPT,EAAKC,OAAOgB,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAEC,iBAIF,IAFA,IAA8BC,EAmCvB,CACLX,MAAOY,OAAOrB,EAAKI,QAAQkB,OAC3BC,KAAMF,OAAOrB,EAAKK,OAAOiB,OACzBE,OAAQH,OAAOrB,EAAKM,SAASgB,QAtCzBG,EAAwBL,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEVE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDnB,EAAcmB,EAAUD,GACvBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAItB,GACZqB,QAAQC,IAAIrB,GACZsB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAP,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBsB,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAErEgB,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let { delay, step, amount } = onGettingDate();\n \n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(position);\n      console.log(delay);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n\n  });\n  \n}\n\n\nfunction onGettingDate() {\n  return {\n    delay: Number(refs.delayEl.value),\n    step: Number(refs.stepEl.value),\n    amount: Number(refs.amountEl.value),\n  };\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","ref","Number","value","step","amount","delay1","position1","then","param","console","log","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.4f79db07.js.map"}